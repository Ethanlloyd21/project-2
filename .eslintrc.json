{
    "env": {
      "browser": true,
      "commonjs": true,
      "es6": true,
      "node": true,
      "jquery": true,
      "jest": true,
      "mocha": true
    },
    "globals": {
      "chai": "readonly"
    },
    "plugins": ["react"],
    "extends": ["eslint:recommended", "plugin:react/recommended"],
    "parserOptions": {
          "ecmaVersion": 6,
          "sourceType": "module",
          "ecmaFeatures": {
              "jsx": true
          }
      },
      "settings": {
        "react": {
          "createClass": "createReactClass", // Regex for Component Factory to use,
                                             // default to "createReactClass"
          "pragma": "React",  // Pragma to use, default to "React"
          "version": "detect", // React version. "detect" automatically picks the version you have installed.
                               // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                               // default to latest and warns if missing
                               // It will default to "detect" in the future
          "flowVersion": "0.53" // Flow version
        },
        "propWrapperFunctions": [
            // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
            "forbidExtraProps",
            {"property": "freeze", "object": "Object"},
            {"property": "myFavoriteWrapper"}
        ],
        "linkComponents": [
          // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
          "Hyperlink",
          {"name": "Link", "linkAttribute": "to"}
        ]
      },
    "rules": {
      "array-bracket-spacing": "error",
      "array-callback-return": "error",
      "arrow-body-style": ["error", "as-needed"],
      "arrow-parens": ["error", "as-needed"],
      "arrow-spacing": "error",
      "block-scoped-var": "error",
      "block-spacing": "error",
      "comma-dangle": ["error", "never"],
      "comma-spacing": ["error", { "before": false, "after": true }],
      "curly": "error",
      "default-case": "error",
      "dot-notation": "error",
      "eqeqeq": "error",
      "eol-last": ["error", "always"],
      "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
      "guard-for-in": "error",
      "indent": ["error", 2],
      "max-depth": ["error", 4],
      "max-len": [
        "error",
        {
          "code": 120
        }
      ],
      "max-lines": ["error", 500],
      "max-nested-callbacks": ["error", 3],
      "no-console": "off",
      "no-duplicate-case": "error",
      "no-duplicate-imports": "error",
      "no-empty": "error",
      "no-empty-function": "error",
      "no-extra-parens": "error",
      "no-extra-semi": "error",
      "no-func-assign": "error",
      "no-irregular-whitespace": "error",
      "no-lone-blocks": "error",
      "no-mixed-requires": "error",
      "no-multi-spaces": "error",
      "no-multiple-empty-lines": "error",
      "no-new": "error",
      "no-new-wrappers": "error",
      "no-proto": "error",
      "no-return-assign": "error",
      "no-return-await": "error",
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-shadow": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-var": "error",
      "no-undef": ["off", {}],
      "no-unreachable": "error",
      "no-unused-vars": ["error", { "varsIgnorePattern": "chai|should|expect" }],
      "no-use-before-define": ["error", { "functions": false }],
      "no-useless-call": "error",
      "no-useless-concat": "error",
      "no-useless-rename": "error",
      "one-var": ["error", "never"],
      "object-shorthand": "error",    
      "parserOptions": 0,
      "prefer-arrow-callback": "error",
      "prefer-const": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-template": "error",
      "quotes": ["error", "backtick"],
      "require-await": "error",
      "rest-spread-spacing": ["error"],
      "semi": ["error", "always"],
      "semi-style": ["error", "last"],
      "spaced-comment": ["error", "always"],
      "strict": "error",
      "vars-on-top": "error",
      "yoda": "error"
    }
  }